[tox]
envlist=py{36,37}
skip_missing_interpreters=True


[testenv]
description=
    run tests with pytest under {basepython}
basepython=
    py36: python3.6
    py37: python3.7
deps=
    pip-tools
commands=
    pip-sync {toxinidir}/requirements.txt {toxinidir}/requirements-test.txt
    pip install -e .

    pytest -s \
        --cov-report html \
        --cov-report term \
        --cov sanic_healthcheck \
        {posargs}


[testenv:deps]
description=
    update the project's frozen dependencies (requirements.txt)
basepython=python3.6
deps=
    pip-tools
commands=
    pip-compile --upgrade --output-file requirements.txt setup.py
    pip-compile --upgrade --output-file requirements-test.txt requirements-test.in


[testenv:docs]
description=
    build the documentation for sanic_healthcheck
basepython=python3.6
skiptdist=True
usedevelop=True
deps=
    sphinx
    sphinx_rtd_theme
commands=
    sphinx-apidoc -o docs/apidoc sanic_healthcheck
    sphinx-build -W -b html docs docs/_build


[testenv:format]
description=
    run basic formatting tools against the source code
basepython=python3.6
deps=
    isort
    autopep8
commands=
    isort --recursive --atomic {posargs:sanic_healthcheck tests}
    autopep8 --recursive --in-place --exclude=conf.py {toxinidir}


[testenv:lint]
description=
    run linting checks against the source code
basepython=python3.6
deps=
    isort
    flake8
    twine>=1.12.0
commands=
    isort -rc -c --diff {posargs:sanic_healthcheck tests}
    flake8 --ignore=E501 --show-source --statistics {posargs:sanic_healthcheck tests}
    python setup.py sdist bdist_wheel
    twine check dist/*


[testenv:publish]
description=
    publish the project to pypi
basepython=python3.6
deps=
    twine>=1.5.0
commands=
    python setup.py sdist bdist_wheel
    twine upload dist/*
